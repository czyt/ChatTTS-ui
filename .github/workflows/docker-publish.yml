name: Publish Docker CPU and GPU images

on:
  release:
    types: [published]
  workflow_dispatch: # Allows manual triggering

jobs:
  build_and_push:
    name: Build and Push Docker ${{ matrix.variant }} image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [cpu, gpu]
      fail-fast: false
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | awk -F '/' '{print $2}')
          echo "repository=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.repo-name.outputs.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-${{ matrix.variant }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.variant }}
            type=raw,value=latest-${{ matrix.variant }},enable=${{ github.event_name == 'release' && github.event.release.prerelease == false }}
          flavor: |
            latest=false

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ${{ matrix.variant == 'gpu' && 'Dockerfile.gpu' || 'Dockerfile.cpu' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VARIANT=${{ matrix.variant }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ format('{0}/chattts-ui:{1}', secrets.DOCKER_USERNAME, format('latest-{0}', matrix.variant)) }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
